<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLogout.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>